% !TeX root = bodeplot.tex

\NeedsTeXFormat{LaTeX2e}[1999/01/01]
\ProvidesPackage{bodeplot}[2021/10/17]
% 2021/10/15 Initial Release - Rushikesh Kamalapurkar
% Based on `bodegraph` by Robert Papanicola
\RequirePackage{tikz}
\RequirePackage{pgfplots}
	\pgfplotsset{compat=1.18,variable=t}
	\usepgfplotslibrary{groupplots}
\RequirePackage{ifluatex}
\ifluatex
	\RequirePackage{pdftexcmds}
	\let\pdfstrcmp\pdf@strcmp
\fi

% handle gnuplot option
\newif\if@gnuarg\@gnuargfalse
\DeclareOption{gnuplot}{
	\@gnuargtrue
}
\ProcessOptions\relax

\if@gnuarg
	\newcounter{idGnuplot}
	\setcounter{idGnuplot}{0}
	\newcommand{\n@pow}[2]{(#1)**(#2)}
	\newcommand{\n@mod}[2]{(#1)-(floor((#1)/(#2))*(#2))}
	\pgfplotsset{
		gnuplot degrees/.code={
			\ifnum\value{idGnuplot}=1
				\xdef\pgfplots@gnuplot@format{\pgfplots@gnuplot@format set angles degrees;}
			\fi
		}
	}
	\tikzset{
		gnuplot def/.style={
			id=\arabic{idGnuplot},
			prefix=gnuplot/
		}
	}
\else
	\newcommand{\n@pow}[2]{(#1)^(#2)}
	\newcommand{\n@mod}[2]{mod((#1),(#2))}
	\PackageWarning {bodeplot} {You are using the 'bodeplot' package in 'pgfplots' mode. If compilation is too slow, consider using 'gnuplot' mode via the package option 'gnuplot'. The 'gnuplot' utility needs to be installed and available on the system path, and the document needs to be compiled using the '--shell-escape' flag.}
\fi

% Constant
\newcommand*{\MagK}[2]{(20*log10(abs(#1)))}
\newcommand*{\MagKAsymp}{\MagK}
\newcommand*{\MagKLin}{\MagK}
\newcommand*{\PhK}[2]{(#1<0?-180:0)}
\newcommand*{\PhKAsymp}{\PhK}
\newcommand*{\PhKLin}{\PhK}

%% Complex pole at s = #1 + i#2: G(s) = 1/(s-#1-#2i)
% Magnitude
\newcommand*{\MagPole}[2]{(-20*log10(sqrt(\n@pow{#1}{2} + \n@pow{t - (#2)}{2})))}
\newcommand*{\MagPoleLin}[2]{(t < sqrt(\n@pow{#1}{2} + \n@pow{#2}{2}) ?
	-20*log10(sqrt(\n@pow{#1}{2} + \n@pow{#2}{2})) :
	-20*log10(t)
)}
\newcommand*{\MagPoleAsymp}{\MagPoleLin}
% Phase
\newcommand*{\PhPole}[2]{(#1 > 0 ? (#2 > 0 ? (\n@mod{-atan2((t - (#2)),-(#1))+360}{360}) : (-atan2((t - (#2)),-(#1)))) : (-atan2((t - (#2)),-(#1))))}
\newcommand*{\PhPoleLin}[2]{((#1*#2) == 0 ? -90 :
	(t < (sqrt(\n@pow{#1}{2} + \n@pow{#2}{2}) / (\n@pow{10}{sqrt(\n@pow{#1}{2}/(\n@pow{#1}{2} + \n@pow{#2}{2}))})) ? 
		(-atan2(-(#2),-(#1))) :
		(t >= (sqrt(\n@pow{#1}{2} + \n@pow{#2}{2}) * (\n@pow{10}{sqrt(\n@pow{#1}{2}/(\n@pow{#1}{2} + \n@pow{#2}{2}))})) ? 
			(#2>0?(#1>0?270:-90):-90) :
			(-atan2(-(#2),-(#1)) + (log10(t/(sqrt(\n@pow{#1}{2} + \n@pow{#2}{2}) / (\n@pow{10}{sqrt(\n@pow{#1}{2}/(\n@pow{#1}{2} + \n@pow{#2}{2}))}))))*((#2>0?(#1>0?270:-90):-90) + atan2(-(#2),-(#1)))/(log10(\n@pow{10}{sqrt((4*\n@pow{#1}{2})/(\n@pow{#1}{2} + \n@pow{#2}{2}))})))
		)
	)
)}
\newcommand*{\PhPoleAsymp}[2]{(t < (sqrt(\n@pow{#1}{2} + \n@pow{#2}{2})) ? 
	(-atan2(-(#2),-(#1))) :
	(#2>0?(#1>0?270:-90):-90)
)}

%% Complex zero at s = #1 + i#2: G(s) = (s-#1-#2i)
% Magnitude
\newcommand*{\MagZero}{0-\MagPole}
\newcommand*{\MagZeroLin}{0-\MagPoleLin}
\newcommand*{\MagZeroAsymp}{0-\MagPoleAsymp}
%Phase
\newcommand*{\PhZero}{0-\PhPole}
\newcommand*{\PhZeroLin}{0-\PhPoleLin}
\newcommand*{\PhZeroAsymp}{0-\PhPoleAsymp}

%% Resonance - complex conjugate poles at #1 \pm #2i
\newcommand*{\MagCCPolesPeak}[3][]{
	\draw[#1,->] (axis cs:{sqrt(\n@pow{#2}{2} + \n@pow{#3}{2})},{-40*log10(sqrt(\n@pow{#2}{2} + \n@pow{#3}{2}))}) -- (axis cs:{sqrt(\n@pow{#2}{2} + \n@pow{#3}{2})},{-20*log10((\n@pow{#2}{2} + \n@pow{#3}{2})/(2*abs(#2)))})
}
%% Resonance - complex conjugate zeros at #1 \pm #2i
\newcommand*{\MagCCZerosPeak}[3][]{
	\draw[#1,->] (axis cs:{sqrt(\n@pow{#2}{2} + \n@pow{#3}{2})},{40*log10(sqrt(\n@pow{#2}{2} + \n@pow{#3}{2}))}) -- (axis cs:{sqrt(\n@pow{#2}{2} + \n@pow{#3}{2})},{20*log10((\n@pow{#2}{2} + \n@pow{#3}{2})/(2*abs(#2)))})
}

%% Canonical second order transfer function G(s) = 1/(s^2 + 2 z wn s + wn^2)
% Magnitude
\newcommand*{\MagCSPoles}[2]{(-20*log10(sqrt(\n@pow{\n@pow{#2}{2} - \n@pow{t}{2}}{2} + \n@pow{2*#1*#2*t}{2})))}
\newcommand*{\MagCSPolesLin}[2]{(t < #2 ? -40*log10(#2) : - 40*log10(t))}
\newcommand*{\MagCSPolesAsymp}{\MagCSPolesLin}
\newcommand*{\MagCSPolesPeak}[3][]{
	\draw[#1,->] (axis cs:{#3},{-40*log10(#3)}) -- (axis cs:{#3},{-40*log10(#3)-20*log10(2*abs(#2))})
}
% Phase
\newcommand*{\PhCSPoles}[2]{(-atan2((2*(#1)*(#2)*t),(\n@pow{#2}{2} - \n@pow{t}{2})))}
\newcommand*{\PhCSPolesLin}[2]{(t < (#2 / (\n@pow{10}{abs(#1)})) ? 
	0 :
	(t >= (#2 * (\n@pow{10}{abs(#1)})) ? 
		(#1>0 ? -180 : 180) :
		(#1>0 ? (-180*(log10(t*(\n@pow{10}{#1})/#2))/(2*#1)) : (180*(log10(t*(\n@pow{10}{abs(#1)})/#2))/(2*abs(#1))))
	)
)}
\newcommand*{\PhCSPolesAsymp}[2]{(#1>0?(t<#2?0:-180):(t<#2?0:180))}

%% Canonical second order transfer function G(s) = s^2 + 2 z wn s + wn^2
% Magnitude
\newcommand*{\MagCSZeros}{0-\MagCSPoles}
\newcommand*{\MagCSZerosLin}{0-\MagCSPolesLin}
\newcommand*{\MagCSZerosAsymp}{0-\MagCSPolesAsymp}
\newcommand*{\MagCSZerosPeak}[3][]{
	\draw[#1,->] (axis cs:{#3},{40*log10(#3)}) -- (axis cs:{#3},{40*log10(#3)+20*log10(2*abs(#2))})
}
%Phase
\newcommand*{\PhCSZeros}{0-\PhCSPoles}
\newcommand*{\PhCSZerosLin}{0-\PhCSPolesLin}
\newcommand*{\PhCSZerosAsymp}{0-\PhCSPolesAsymp}

%% General second order transfer function G(s) = 1/(s^2 + as + b)
% Magnitude
\newcommand*{\MagSOPoles}[2]{(-20*log10(sqrt(\n@pow{#2 - \n@pow{t}{2}}{2} + \n@pow{#1*t}{2})))}
\newcommand*{\MagSOPolesLin}[2]{(t < sqrt(abs(#2)) ? -20*log10(abs(#2)) : - 40*log10(t))}
\newcommand*{\MagSOPolesAsymp}{\MagSOPolesLin}
\newcommand*{\MagSOPolesPeak}[3][]{
	\draw[#1,->] (axis cs:{sqrt(abs(#3))},{-20*log10(abs(#3))}) -- (axis cs:{sqrt(abs(#3))},{-20*log10(abs(#3)) - 20*log10(abs(#2/sqrt(abs(#3))))})
}
% Phase
\newcommand*{\PhSOPoles}[2]{(-atan2((#1)*t,((#2) - \n@pow{t}{2})))}
\newcommand*{\PhSOPolesLin}[2]{#2>0 ? \PhCSPolesLin{(#1/(2*sqrt(#2)))}{(sqrt(#2))} : (#1>0 ? -180 : 180)}
\newcommand*{\PhSOPolesAsymp}[2]{#2>0 ? \PhCSPolesAsymp{(#1/(2*sqrt(#2)))}{(sqrt(#2))} : (#1>0 ? -180 : 180)}

%% General second order transfer function G(s) = s^2 + as + b
% Magnitude
\newcommand*{\MagSOZeros}{0-\MagSOPoles}
\newcommand*{\MagSOZerosLin}{0-\MagSOPolesLin}
\newcommand*{\MagSOZerosAsymp}{0-\MagSOPolesAsymp}
\newcommand*{\MagSOZerosPeak}[3][]{
	\draw[#1,->] (axis cs:{sqrt(abs(#3))},{20*log10(abs(#3))}) -- (axis cs:{sqrt(abs(#3))},{20*log10(abs(#3)) + 20*log10(abs(#2/sqrt(abs(#3))))})
}
%Phase
\newcommand*{\PhSOZeros}{0-\PhSOPoles}
\newcommand*{\PhSOZerosLin}{0-\PhSOPolesLin}
\newcommand*{\PhSOZerosAsymp}{0-\PhSOPolesAsymp}

%Delay D(s)=exp(-T*s)
\newcommand*{\MagDel}[2]{0}
\newcommand*{\PhDel}[2]{-#1*180*t/pi}

% The Bode command
% \Bode[plot_type,{{Magnitude_axis_options},{Phase_axis_options}},{{Magnitude_plot_options},{Phase_plot_options}}]{{zeros},{poles},gain,delay}{min_frequency}{max_frequency}
\newcommand{\Bode}[4][{},{},{}]{%
	\gdef\optmag@axes{}%
	\gdef\optph@axes{}%
	\gdef\optph@plot{}%
	\gdef\optmag@plot{}%
	\gdef\opt@group{}%
	\gdef\opt@approx{}%
	\foreach \opt [count=\n] in {#1} {%
		\ifnum\n=1
			\xdef\opt@approx{\opt}
		\else
			\ifnum\n=2
				\foreach \subopt [count=\m] in \opt {%
					\ifnum\m=1
						\xdef\optmag@axes{\subopt}
						\xdef\optph@axes{\subopt}
					\fi
					\ifnum\m=2
						\xdef\optph@axes{\subopt}
					\fi
				}
			\else
				\foreach \subopt [count=\m] in \opt {%
					\ifnum\m=1
						\xdef\optmag@plot{\subopt}
						\xdef\optph@plot{\subopt}
					\fi
					\ifnum\m=2
						\xdef\optph@plot{\subopt}
					\fi
				}
			\fi
		\fi
	}%
	\gdef\func@mag{}%
	\gdef\func@ph{}%
	\build@plot{\func@mag}{magnitude}{\opt@approx}{#2}
	\build@plot{\func@ph}{phase}{\opt@approx}{#2}
	\begin{tikzpicture}
		\begin{groupplot}[
			grid=both,
			major grid style={color=gray!80},
			minor grid style={color=gray!20},
			xmin={#3},
			xmax={#4},
			domain=#3:#4,
			width=6cm,
			height=3cm,
			x label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			y label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			scale only axis,
			xmode=log,
			group style = {group size = 1 by 2,vertical sep=0.25cm,},
			samples=200,
			]
			
			\if@gnuarg
				\stepcounter{idGnuplot}
				\expandafter\nextgroupplot\expandafter[ytick distance=20,ylabel={Gain (dB)},xmajorticks=false,\optmag@axes]
					\expandafter\addplot\expandafter[\optmag@plot] gnuplot[gnuplot degrees,gnuplot def] {\func@mag};
				\stepcounter{idGnuplot}
				\expandafter\nextgroupplot\expandafter[ytick distance=45,ylabel={Phase ($^{\circ}$)},xlabel={Frequency (rad/s)},\optph@axes]
					\expandafter\addplot\expandafter[\optph@plot] gnuplot[gnuplot degrees,gnuplot def] {\func@ph};
			\else
				\expandafter\nextgroupplot\expandafter[ytick distance=20,ylabel={Gain (dB)},xmajorticks=false,\optmag@axes]
					\expandafter\addplot\expandafter[\optmag@plot]{\func@mag};
				\expandafter\nextgroupplot\expandafter[ytick distance=45,ylabel={Phase ($^{\circ}$)},xlabel={Frequency (rad/s)},\optph@axes]
					\expandafter\addplot\expandafter[\optph@plot]{\func@ph};
			\fi
		\end{groupplot}
	\end{tikzpicture}
}

% The BodePlot environment, work in conjunction with \addBodePlots
%\begin{BodePlot}[axis options]{frequency_min}{frequency_max}
\newenvironment{BodePlot}[3][]{
	\begin{tikzpicture}
		\begin{semilogxaxis}[
			grid=both,
			major grid style={color=gray!80},
			minor grid style={color=gray!20},
			xmin={#2},
			xmax={#3},
			domain=#2:#3,
			width=6cm,
			height=3cm,
			x label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			y label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			xlabel={Frequency (rad/s)},
			scale only axis,
			samples=200,
			#1
		]
}{
		\end{semilogxaxis}
	\end{tikzpicture}
}

% Command to add Bode plots
%\addBodePlots[{approximation_1/{plot_options_1}},{approximation_2/{plot_options_2}},...]{plot_type (phase or magnitude)}{{zeros},{poles},gain,delay}
\newcommand{\addBodePlots}[3][{true/{red,thick}}]{%%%
	\foreach \approx/\attrib in {#1} {
		\gdef\plot@macro{}%
		\build@plot{\plot@macro}{#2}{\approx}{#3}
		\if@gnuarg
			\stepcounter{idGnuplot}
			\expandafter\addplot\expandafter[\attrib] gnuplot[gnuplot degrees,gnuplot def] {\plot@macro};
		\else
			\expandafter\addplot\expandafter[\attrib]{\plot@macro};
		\fi
	}%
}

%\begin{NicholsChart}[axis options]{frequency_min}{frequency_max}
\newenvironment{NicholsChart}[3][]{
	\begin{tikzpicture}
		\begin{axis}[
			grid=both,
			major grid style={color=gray!80},
			minor grid style={color=gray!20},
			scale only axis,
			domain=#2:#3,
			width=6cm,
			height=6cm,
			ytick distance=20,
			xtick distance=15,
			x label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			y label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			xlabel={Phase (degrees)},
			ylabel={Gain (dB)},
			#1
		]
}{
		\end{axis}
	\end{tikzpicture}
}
% \addNicholsChart[plot_options]{{zeros},{poles},gain,delay}
\newcommand{\addNicholsPlot}[2][]{
	\gdef\func@mag{}%
	\gdef\func@ph{}%
	\build@plot{\func@mag}{magnitude}{}{#2}
	\build@plot{\func@ph}{phase}{}{#2}
	\if@gnuarg
		\stepcounter{idGnuplot}
		\addplot [#1] gnuplot[gnuplot degrees,gnuplot def] {\func@ph , \func@mag};
	\else
		\addplot [#1] ( {\func@ph} , {\func@mag} );
	\fi
}

%\begin{NyquistPlot}[axis options]{frequency_min}{frequency_max}
\newenvironment{NyquistPlot}[3][]{
	\begin{tikzpicture}
		\begin{axis}[
			grid=both,
			major grid style={color=gray!80},
			minor grid style={color=gray!20},
			scale only axis,
			width=6cm,
			height=6cm,
			domain=#2:#3,
			x label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			y label style={at={(ticklabel cs:0.5)},anchor=near ticklabel},
			xlabel={$\Re$},
			ylabel={$\Im$},
			#1
		]
		\addplot [only marks,mark=+,thick,red] (-1 , 0);
}{
		\end{axis}
	\end{tikzpicture}
}
% \addNyquistPlot[plot_options]{{zeros},{poles},gain,delay}
\newcommand{\addNyquistPlot}[2][]{
	\gdef\func@mag{}%
	\gdef\func@ph{}%
	\build@plot{\func@mag}{magnitude}{}{#2}
	\build@plot{\func@ph}{phase}{}{#2}
	\typeout{\meaning\func@mag}
	\typeout{\meaning\func@ph}
	\if@gnuarg
		\stepcounter{idGnuplot}
		\addplot [#1] gnuplot[parametric,gnuplot degrees,gnuplot def] { \n@pow{10}{((\func@mag)/20)}*cos(\func@ph) , \n@pow{10}{((\func@mag)/20)}*sin(\func@ph) };
	\else
		\addplot [#1] ( {\n@pow{10}{((\func@mag)/20)}*cos(\func@ph)} , {\n@pow{10}{((\func@mag)/20)}*sin(\func@ph)} );
	\fi
}

%% Internal Commands
% Internal command to build Bode parametric function from zeros, poles, gain, and delay
%\build@plot{plot_handle}{plot_type}{plot_approximation}{{zeros},{poles},gain,delay}
\newcommand{\build@plot}[4]{
	\foreach \feature [count=\n] in {#4} {%
		\ifnum\n=1
			\foreach \z in \feature {
				\ifnum\pdfstrcmp{#3}{linear}=0
					\ifnum\pdfstrcmp{#2}{phase}=0
						\add@feature{#1}{\PhZeroLin}{\z}
					\else
						\add@feature{#1}{\MagZeroLin}{\z}
					\fi
				\else
					\ifnum\pdfstrcmp{#3}{asymptotic}=0
						\ifnum\pdfstrcmp{#2}{phase}=0
							\add@feature{#1}{\PhZeroAsymp}{\z}
						\else
							\add@feature{#1}{\MagZeroAsymp}{\z}
						\fi
					\else
						\ifnum\pdfstrcmp{#2}{phase}=0
							\add@feature{#1}{\PhZero}{\z}
						\else
							\add@feature{#1}{\MagZero}{\z}
						\fi
					\fi
				\fi
			}
		\else
			\ifnum\n=2
				\foreach \p in \feature {
					\ifnum\pdfstrcmp{#3}{linear}=0
						\ifnum\pdfstrcmp{#2}{phase}=0
							\add@feature{#1}{\PhPoleLin}{\p}
						\else
							\add@feature{#1}{\MagPoleLin}{\p}
						\fi
					\else
						\ifnum\pdfstrcmp{#3}{asymptotic}=0
							\ifnum\pdfstrcmp{#2}{phase}=0
								\add@feature{#1}{\PhPoleAsymp}{\p}
							\else
								\add@feature{#1}{\MagPoleAsymp}{\p}
							\fi
						\else
							\ifnum\pdfstrcmp{#2}{phase}=0
								\add@feature{#1}{\PhPole}{\p}
							\else
								\add@feature{#1}{\MagPole}{\p}
							\fi
						\fi
					\fi
				}
			\else
				\ifnum\n=3
					\ifnum\pdfstrcmp{#3}{linear}=0
						\ifnum\pdfstrcmp{#2}{phase}=0
							\add@feature{#1}{\PhKLin}{\feature}
						\else
							\add@feature{#1}{\MagKLin}{\feature}
						\fi
					\else
						\ifnum\pdfstrcmp{#3}{asymptotic}=0
							\ifnum\pdfstrcmp{#2}{phase}=0
								\add@feature{#1}{\PhKAsymp}{\feature}
							\else
								\add@feature{#1}{\MagKAsymp}{\feature}
							\fi
						\else
							\ifnum\pdfstrcmp{#2}{phase}=0
								\add@feature{#1}{\PhK}{\feature}
							\else
								\add@feature{#1}{\MagK}{\feature}
							\fi
						\fi
					\fi
				\else
					\ifnum\pdfstrcmp{#3}{linear}=0
						\PackageError {bodeplot} {Linear approximation for pure delays is not supported.} {Plot the true Bode plot using 'true' instead of 'linear'.}
					\else
						\ifnum\pdfstrcmp{#3}{asymptotic}=0
							\PackageError {bodeplot} {Asymptotic approximation for pure delays is not supported.} {Plot the true Bode plot using 'true' instead of 'asymptotic'.}
						\else
							\ifdim\feature pt < 0pt
								\PackageError {bodeplot} {Delay needs to be a positive number.}
							\fi
							\ifnum\pdfstrcmp{#2}{phase}=0
								\add@feature{#1}{\PhDel}{\feature}
							\else
								\add@feature{#1}{\MagDel}{\feature}
							\fi
						\fi
					\fi
				\fi
			\fi
		\fi
	}%
}%


% Internal command to add pole/zero/gain/delay to a parametric function
\newcommand*{\add@feature}[3]{
	\ifcat$\detokenize\expandafter{#1}$%
		\xdef#1{\unexpanded\expandafter{#1 0+#2}}%
	\else
		\xdef#1{\unexpanded\expandafter{#1+#2}}%
	\fi
	\foreach \y [count=\n] in #3 {%
		\xdef#1{\unexpanded\expandafter{#1}{\y}}%
		\xdef\Last@LoopValue{\n}%
	}%
	\ifnum\Last@LoopValue=1%
		\xdef#1{\unexpanded\expandafter{#1}{0}}%
	\fi
}

% Extra commands
% %% Real pole at s = #1 G(s) = 1/(s-#1)
% % Magnitude
% \newcommand*{\MagRePole}[1]{\MagPole{#1}{0}}
% \newcommand*{\MagRePoleLin}[1]{\MagPoleLin{#1}{0}}
% \newcommand*{\MagRePoleAsymp}{\MagRePoleLin}
% 
% % Phase
% \newcommand*{\PhRePole}[1]{\PhPole{#1}{0}}
% \newcommand*{\PhRePoleLin}[1]{\PhPoleLin{#1}{0}}
% \newcommand*{\PhRePoleAsymp}[1]{\PhPoleAsymp{#1}{0}}
% %% Real zero at s = #1 G(s) = s-#1
% % Magnitude
% \newcommand*{\MagReZero}{0-\MagRePole}
% \newcommand*{\MagReZeroLin}{0-\MagRePoleLin}
% \newcommand*{\MagReZeroAsymp}{0-\MagRePoleAsymp}
% %Phase
% \newcommand*{\PhReZero}{0-\PhRePole}
% \newcommand*{\PhReZeroLin}{0-\PhRePoleLin}
% \newcommand*{\PhReZeroAsymp}{0-\PhRePoleAsymp}
% 
% %% Integrator
% \newcommand*{\MagInt}[1]{(20*log10(abs(#1/t)))}
% \newcommand*{\MagIntLin}{\MagInt}
% \newcommand*{\MagIntAsymp}{\MagInt}
% \newcommand*{\PhInt}[1]{-90}
% \newcommand*{\PhIntLin}{\PhInt}
% \newcommand*{\PhIntAsymp}{\PhInt}
% 
% %% Differentiator
% \newcommand*{\MagDiff}[1]{(-20*log10(abs(#1/t)))}
% \newcommand*{\MagDiffAsymp}{\MagDiff}
% \newcommand*{\MagDiffLin}{\MagDiff}
% \newcommand*{\PhDiff}[1]{90}
% \newcommand*{\PhDiffLin}{\PhDiff}
% \newcommand*{\PhDiffAsymp}{\PhDiff}
% 
% %% Complex conjugate poles at #1 \pm #2i
% % Magnitude
% \newcommand*{\MagCCPoles}[2]{(\MagPole{#1}{#2}+\MagPole{#1}{-#2})}
% \newcommand*{\MagCCPolesLin}[2]{(\MagPoleLin{#1}{#2}+\MagPoleLin{#1}{-#2})}
% \newcommand*{\MagCCPolesAsymp}{\MagCCPolesLin}
% % Phase
% \newcommand*{\PhCCPoles}[2]{(\PhPole{#1}{#2}+\PhPole{#1}{-#2})}
% \newcommand*{\PhCCPolesLin}[2]{(\PhPoleLin{#1}{#2}+\PhPoleLin{#1}{-#2})}
% \newcommand*{\PhCCPolesAsymp}[2]{(\PhPoleAsymp{#1}{#2}+\PhPoleAsymp{#1}{-#2})}
% 
% %% Complex conjugate zeros at #1 \pm #2i
% % Magnitude
% \newcommand*{\MagCCZeros}{0-\MagCCPoles}
% \newcommand*{\MagCCZerosLin}{0-\MagCCPolesLin}
% \newcommand*{\MagCCZerosAsymp}{0-\MagCCPolesAsymp}
% %Phase
% \newcommand*{\PhCCZeros}{0-\PhCCPoles}
% \newcommand*{\PhCCZerosLin}{0-\PhCCPolesLin}
% \newcommand*{\PhCCZerosAsymp}{0-\PhCCPolesAsymp}